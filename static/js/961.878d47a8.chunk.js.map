{"version":3,"file":"static/js/961.878d47a8.chunk.js","mappings":"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","sources":["components/heroy/Heroy.styled.jsx","components/heroy/Heroy.jsx","components/bacgroundGreeting/BacgroundGreeting.styled.jsx","components/blurFone/BlurFone.styled.jsx","components/bacgroundGreeting/BacgroundGreeting.jsx","components/loginForm/LoginForm.styled.jsx","components/loginForm/LoginForm.jsx","views/loginPage/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const HeroyConteiner = styled.div`\n    display: none;\n\n    @media (min-width: 768px) {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        margin-bottom: 50px;\n        margin-top: 60px;\n    }\n\n    @media (min-width: 1280px) {\n        flex-direction: column;\n        justify-content: center;\n        margin-bottom: 0px;\n        margin-top: 0px;\n        margin-right: 50px;\n        min-height: 100vh;\n        background-color: #e5e5e5;\n    }\n`;\nexport const HeroyBackground = styled.div`\n    display: flex;\n    justify-content: center;\n\n    @media (min-width: 1280px) {\n        justify-content: end;\n        align-items: center;\n        width: 43%;\n        background-color: #e5e5e5;\n    }\n`;\nexport const HeroyTitle = styled.div`\n    font-family: 'Poppins';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 30px;\n    line-height: 45px;\n    margin-left: 20px;\n    z-index: 3;\n    \n    @media (min-width: 1280px) {\n        margin-left: 0px;\n    }\n`;\n\nexport const Svg = styled.svg`\n    font-family: 'Poppins';\n    font-style: normal;\n    font-weight: 400;\n    font-size: 30px;\n    line-height: 45px;\n    margin-left: 20px;\n    z-index: 3;\n    @media (min-width: 1280px) {\n        margin-left: 0px;\n    }\n`;","import React from 'react';\nimport spr from '../../images/sprite.svg';\nimport { HeroyConteiner, HeroyBackground, HeroyTitle } from './Heroy.styled';\n\nconst Heroy = ({ page }) => {\n    return (\n        <HeroyBackground>\n            <HeroyConteiner>\n                {page === 'login' ? (\n                    <svg className=\"icon-greetting\">\n                        <use href={spr + '#header-login'}></use>\n                    </svg>\n                ) : (\n                    <svg className=\"icon-greetting\">\n                        <use href={spr + '#header-register'}></use>\n                    </svg>\n                )}\n                <HeroyTitle>Finance App</HeroyTitle>\n            </HeroyConteiner>\n        </HeroyBackground>\n    );\n};\n\nexport default Heroy;\n","import styled from '@emotion/styled';\n\nexport const BackgroundBox = styled.div`\n    background-color: #e7eaf2;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n    @media (min-width: 1280px) {\n        flex-direction: row;\n        align-items: center;\n    }\n`;\n","import styled from '@emotion/styled';\n\nexport const BlurFone = styled.div`\n    @media (min-width: 1280px) {\n        width: 100%;\n        height: 100%;\n        background: rgba(255, 255, 255, 0.4);\n        backdrop-filter: blur(50px);\n        z-index: 3;\n        position: absolute;\n        top: 0;\n        right: 0;\n        width: 57vw;\n        height: 100vh;\n    }\n`;\n","import React from 'react';\nimport Heroy from 'components/heroy/Heroy';\nimport spr from '../../images/sprite.svg';\nimport { BackgroundBox } from './BacgroundGreeting.styled';\nimport { BlurFone } from 'components/blurFone/BlurFone.styled';\n\nconst BacgroundGreeting = ({ page, children }) => {\n    return (\n        <BackgroundBox>\n            <svg className=\"icon-ellipse-blue\">\n                <use href={spr + '#ellipse-1'}></use>\n            </svg>\n            <svg className=\"icon-ellipse-purp\">\n                <use href={spr + '#ellipse-2'}></use>\n            </svg>\n            <Heroy page={page} />\n            {children}\n            <BlurFone />\n        </BackgroundBox>\n    );\n};\n\nexport default BacgroundGreeting;\n","import styled from '@emotion/styled';\n\nexport const ModalForma = styled.div`\n    position: absolute;\n    z-index: 25;\n    top: 0;\n    left: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    \n    width: 100vw;\n    height: 100vh;\n    padding: 20px;\n    background-color: ${({ theme }) => theme.colors.white};\n\n    @media (min-width: 768px) {\n        position: relative;\n        margin-left: auto;\n        margin-right: auto;\n        margin-bottom: 50px;\n        border-radius: 20px;\n        padding: 40px;\n        width: 533px;\n        height: 468px;\n    }\n\n    @media (min-width: 1280px) {\n        margin-left: 107px;\n    }\n`;\n\nexport const FormaCastom = styled.form`\n    max-width: 280px;\n    margin-top: 20px;\n\n    @media (min-width: 768px) {\n        width: 410px;\n    }\n`;\n\nexport const ErrorLabel = styled.div`\n    color: ${({ theme }) => theme.colors.error};\n    font-size: 14px;\n    margin-left: 10px;\n`;\n\n\nexport const InputBox = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: end;\n    margin-top: 40px;\n    width: 100%;\n`;\n\nexport const ShowPasswordBtnStyles = {\n    color: '#E0E0E0',\n};\n\nexport const BoxButton = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-left: auto;\n    margin-right: auto;\n    margin-top: 42px;\n\n    @media (min-width: 768px) {\n        width: 300px;\n    }\n`;","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { TextField, InputLabel, InputAdornment, IconButton } from '@mui/material';\nimport { Mail, Lock, Visibility, VisibilityOff } from '@mui/icons-material';\nimport { newToken } from 'redux/sliceToken';\nimport { isUserName } from 'redux/sliceUserName';\nimport { useLoginUserMutation } from 'redux/authAPI';\nimport { loginSchema } from 'helpers/validationForm';\nimport TitleWallet from 'components/titleWallet/TitleWallet';\nimport { GeneralButton } from 'components/generalButton/GeneralButton.styled';\nimport { ModalForma,\n    BoxButton,\n    InputBox,\n    FormaCastom,\n    ErrorLabel,\n    ShowPasswordBtnStyles\n} from './LoginForm.styled';\n\nconst LoginForm = () => {\n    const [showPassword, setShowPassword] = useState(false);\n    const [disabled, setDisabled] = useState(false);\n    const [loginUser] = useLoginUserMutation();\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const handleClickShowPassword = () => setShowPassword(!showPassword);\n\n    const formik = useFormik({\n        initialValues: {\n            password: '',\n            email: '',\n        },\n        validationSchema: loginSchema,\n        onSubmit: async values => {\n            setDisabled(true);\n            try {\n                const respons = await loginUser(values);\n\n                if (respons.error) {\n                    toast.error('Email or password is wrong');\n                    setDisabled(false);\n                    return;\n                }\n                if (respons.data.user.name) {\n                    dispatch(newToken(respons.data.user.token));\n                    dispatch(isUserName(respons.data.user.name));\n                    toast.success(`Welcome ${respons.data.user.name}!`);\n                }\n            } catch (error) {\n                console.log(error);\n            }\n            setDisabled(false);\n        },\n    });\n\n    return (\n        <ModalForma>\n            <TitleWallet />\n            <FormaCastom onSubmit={formik.handleSubmit}>\n                <InputBox>\n                    <InputLabel htmlFor=\"email\">\n                        {formik.touched.email && formik.errors.email ? (\n                            <ErrorLabel>{formik.errors.email}</ErrorLabel>\n                        ) : null}\n                    </InputLabel>\n                    <TextField\n                        fullWidth\n                        variant={'standard'}\n                        required\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        onChange={formik.handleChange}\n                        value={formik.values.email}\n                        placeholder={'Email Address'}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <Mail sx={{ color: '#E0E0E0', ml: '7px' }} />\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </InputBox>\n                <InputBox>\n                    <InputLabel htmlFor=\"password\">\n                        {formik.touched.password && formik.errors.password ? (\n                            <ErrorLabel>{formik.errors.password}</ErrorLabel>\n                        ) : null}\n                    </InputLabel>\n                    <TextField\n                        fullWidth\n                        variant={'standard'}\n                        required\n                        id=\"password\"\n                        name=\"password\"\n                        type={showPassword ? 'text' : 'password'}\n                        onChange={formik.handleChange}\n                        value={formik.values.password}\n                        placeholder={'Password'}\n                        InputProps={{\n                            startAdornment: (\n                                <InputAdornment position=\"start\">\n                                    <Lock sx={{ color: '#E0E0E0', ml: '7px' }} />\n                                </InputAdornment>\n                            ),\n                            endAdornment: (\n                                <InputAdornment position=\"end\">\n                                    <IconButton\n                                        aria-label=\"toggle password visibility\"\n                                        onClick={handleClickShowPassword}\n                                    >\n                                        {showPassword ? (\n                                            <Visibility />\n                                        ) : (\n                                            <VisibilityOff sx={ShowPasswordBtnStyles} />\n                                        )}\n                                    </IconButton>\n                                </InputAdornment>\n                            ),\n                        }}\n                    />\n                </InputBox>\n                <BoxButton>\n                    <GeneralButton variant={'contained'} bts={'submit'} disabled={disabled} type=\"submit\">\n                        Log in\n                    </GeneralButton>\n                    <GeneralButton\n                        bts={'link'}\n                        variant={'outlined'}\n                        onClick={() => navigate('/register', { replace: true })}\n                    >\n                        Register\n                    </GeneralButton>\n                </BoxButton>\n            </FormaCastom>\n        </ModalForma>\n    );\n};\n\nexport default LoginForm;","import React from 'react';\nimport BacgroundGreeting from 'components/bacgroundGreeting/BacgroundGreeting';\nimport LoginForm from 'components/loginForm/LoginForm';\n\nconst LoginPage = () => {\n    return (\n        <BacgroundGreeting page={'login'}>\n            <LoginForm />\n        </BacgroundGreeting>\n    );\n};\n\nexport default LoginPage;\n"],"names":["HeroyConteiner","styled","HeroyBackground","HeroyTitle","page","className","href","spr","BackgroundBox","BlurFone","children","ModalForma","theme","colors","white","FormaCastom","ErrorLabel","error","InputBox","ShowPasswordBtnStyles","color","BoxButton","useState","showPassword","setShowPassword","disabled","setDisabled","useLoginUserMutation","loginUser","navigate","useNavigate","dispatch","useDispatch","formik","useFormik","initialValues","password","email","validationSchema","loginSchema","onSubmit","values","respons","toast","data","user","name","newToken","token","isUserName","console","log","TitleWallet","handleSubmit","InputLabel","htmlFor","touched","errors","TextField","fullWidth","variant","required","id","type","onChange","handleChange","value","placeholder","InputProps","startAdornment","InputAdornment","position","Mail","sx","ml","Lock","endAdornment","IconButton","onClick","Visibility","VisibilityOff","bts","replace","BacgroundGreeting"],"sourceRoot":""}